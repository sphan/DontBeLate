package com.comp4920.dbl.gameobjects;

import java.util.Random;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.math.Vector2;
import com.comp4920.dbl.gameobjects.Car.CarColour;
import com.comp4920.dbl.helpers.AssetLoader;

public class TreeScenery implements Scenery {
	public static enum TreeColour {
	    NORMAL
	}
	
	private Animation treeAnimation;
	protected Vector2 position;
	
	protected static final int TREE_WIDTH = 40;
	protected static final int TREE_HEIGHT = 100;	

	protected Rectangle boundingRectangle;
	
	private boolean stopped;
	private int maxSpeed;
	private int minSpeed;

	protected int defaultSpeed = 100;	//used if randomStartSpeed = false
	
	public TreeScenery() {
		stopped = false;
		this.position = new Vector2(0, 400);
        boundingRectangle = new Rectangle();
        treeAnimation = AssetLoader.treeAnimation;
	}
	// does not take an x or y coord
	// x is generated by getRandomX
	// y is the same every time
	public TreeScenery(int x, int y) {
		stopped = false;
		this.position = new Vector2(x, y);
        boundingRectangle = new Rectangle();
        treeAnimation = AssetLoader.treeAnimation;
	}
	
	
	public void update(float delta) {
		if(!stopped){
			position.y -= delta*((Road.getRoadSpeed()));
			
			boundingRectangle.set(position.x, position.y, TREE_WIDTH, TREE_HEIGHT);	//TODO: check these numbers
		}
			
	}
		
	// Returns true if the coords of the car are offscreen.
	public boolean offScreen() {
		return (this.getY() < -TREE_HEIGHT || this.getY() > 1000); 
	}
	
	
	public void stop() {
		stopped = true;
	}
	
	public void start() {
		stopped = false;
	}

		
    public float getX() {
        return position.x;
    }

    public float getY() {
        return position.y;
    }

    public float getWidth() {
        return TREE_WIDTH;
    }

    public float getHeight() {
        return TREE_HEIGHT;
    }

    public Rectangle getHitBox() {
    	return boundingRectangle;
    }

    public Animation getAnimation() {
    	return treeAnimation;
    }


	@Override
	public float getVerticalSpeed() {
		// TODO Auto-generated method stub
		return 0;
	}


    


}
